/* Premium Animation System - HouseLove */

/* Import enhanced tokens */
@import './enhanced-tokens.css';

/* ===== MICRO-INTERACTIONS & HOVER STATES ===== */

/* * Hover transitions for all interactive elements */
.interactive {
  transition: all var(--transition-normal);
  cursor: pointer;
}

.interactive:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-hover);
}

/* * Button press effects */
.btn:active {
  transform: scale(var(--btn-active-scale) translateY(1px));
  transition: transform var(--transition-fast);
}

/* * Card hover effects */
.card--interactive {
  transition: all var(--card-transition);
  cursor: pointer;
}

.card--interactive:hover {
  transform: scale(var(--card-hover-scale);
  box-shadow: var(--card-hover-shadow);
}

/* * Link hover effects */
.link--animated {
  position: relative;
  transition: color var(--transition-fast);
}

.link--animated::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background: currentColor;
  transition: width var(--transition-normal);
}

.link--animated:hover::after {
  width: 100%;
}

/* ===== FOCUS STATES & ACCESSIBILITY ===== */

/* * Enhanced focus rings */
.focus-ring {
  outline: none;
  transition: box-shadow var(--transition-fast);
}

.focus-ring:focus-visible {
  box-shadow: var(--focus-ring-primary);
}

.focus-ring--secondary:focus-visible {
  box-shadow: var(--focus-ring-secondary);
}

/* * Focus indicators for keyboard navigation */
.nav-item:focus-visible {
  outline: none;
  box-shadow: var(--focus-ring-primary);
  transform: scale(1.05);
}

/* ===== LOADING ANIMATIONS ===== */

/* * Skeleton loading with shimmer effect */
.skeleton {
  background: var(--skeleton-bg);
  background-image: var(--skeleton-shimmer);
  background-size: var(--skeleton-shimmer-size);
  animation: shimmer var(--skeleton-duration) ease-in-out infinite;
}

@keyframes shimmer {
  0% { background-position: 100% 0; }
  100% { background-position: -100% 0; }
}

/* * Branded spinner */
.spinner {
  width: 24px;
  height: 24px;
  border: 2px solid var(--border-subtle);
  border-top: 2px solid var(--primary-500);
  border-radius: 50%;
  animation: spin var(--spinner-duration) linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* * Pulse loading */
.pulse {
  animation: pulse var(--pulse-duration) ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

/* * Loading overlay */
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(var(--loading-blur));
  opacity: var(--loading-opacity);
  transition: opacity var(--transition-normal);
}

/* ===== PAGE TRANSITIONS ===== */

/* * Slide transitions */
.page-transition {
  animation: slideIn var(--page-transition-duration) var(--page-transition-easing);
}

.page-transition--slide-left {
  animation: slideInLeft var(--page-transition-duration) var(--page-transition-easing);
}

.page-transition--slide-right {
  animation: slideInRight var(--page-transition-duration) var(--page-transition-easing);
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* * Fade transitions */
.page-transition--fade {
  animation: fadeIn var(--page-transition-duration) var(--page-transition-easing);
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* ===== SUCCESS & CELEBRATION ANIMATIONS ===== */

/* * Success confirmation with celebration */
.success-animation {
  animation: successCelebration 0.6s var(--transition-bounce);
}

@keyframes successCelebration {
  0% {
    transform: scale(1) rotate(0deg);
    box-shadow: var(--shadow-sm);
  }
  50% {
    transform: scale(var(--celebration-scale)) rotate(var(--celebration-rotation));
    box-shadow: var(--success-glow);
  }
  100% {
    transform: scale(1) rotate(0deg);
    box-shadow: var(--shadow-sm);
  }
}

/* * Checkmark animation */
.checkmark {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  animation: drawCheckmark 0.6s var(--transition-bounce) forwards;
}

@keyframes drawCheckmark {
  to {
    stroke-dashoffset: 0;
  }
}

/* ===== ERROR & WARNING STATES ===== */

/* * Error shake animation */
.error-shake {
  animation: shake var(--error-shake);
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

/* * Warning pulse */
.warning-pulse {
  animation: warningPulse var(--warning-pulse);
}

@keyframes warningPulse {
  0%, 100% { 
    box-shadow: 0 0 0 0 rgba(245, 158, 11, 0.7);
  }
  50% { 
    box-shadow: 0 0 0 10px rgba(245, 158, 11, 0);
  }
}

/* ===== FORM INTERACTIONS ===== */

/* * Input focus animation */
.input--animated {
  transition: all var(--input-transition);
}

.input--animated:focus-within {
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

/* * Form validation states */
.input--valid {
  border-color: var(--success-500);
  box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
}

.input--invalid {
  border-color: var(--danger-500);
  animation: error-shake var(--error-shake);
}

/* * Submit button loading state */
.btn--loading {
  position: relative;
  color: transparent;
}

.btn--loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin: -8px 0 0 -8px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin var(--spinner-duration) linear infinite;
}

/* ===== TOOLTIP ANIMATIONS ===== */

/* * Tooltip with delay */
.tooltip {
  opacity: 0;
  visibility: hidden;
  transition: all var(--tooltip-transition);
  transform: translateY(10px);
}

.tooltip--visible {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

/* * Tooltip arrow animation */
.tooltip-arrow {
  transition: transform var(--tooltip-transition);
}

.tooltip--visible .tooltip-arrow {
  transform: rotate(180deg);
}

/* ===== MODAL & OVERLAY ANIMATIONS ===== */

/* * Modal backdrop */
.modal-backdrop {
  opacity: 0;
  transition: opacity var(--modal-transition);
}

.modal-backdrop--visible {
  opacity: 1;
}

/* * Modal content */
.modal-content {
  transform: scale(var(--modal-scale));
  opacity: 0;
  transition: all var(--modal-transition);
}

.modal-content--visible {
  transform: scale(var(--modal-scale-active));
  opacity: 1;
}

/* ===== TOAST NOTIFICATIONS ===== */

/* * Toast slide in/out */
.toast {
  transform: translateX(var(--toast-slide-distance));
  opacity: 0;
  transition: all var(--toast-transition);
}

.toast--visible {
  transform: translateX(0);
  opacity: 1;
}

.toast--exiting {
  transform: translateX(calc(var(--toast-slide-distance) * -1));
  opacity: 0;
}

/* ===== PROGRESS INDICATORS ===== */

/* * Linear progress bar */
.progress-bar {
  height: var(--progress-height);
  background: var(--border-subtle);
  border-radius: var(--progress-border-radius);
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: var(--primary-500);
  transition: width var(--progress-transition);
  position: relative;
}

.progress-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 50%,
    transparent 100%
  );
  animation: progressShine 2s ease-in-out infinite;
}

@keyframes progressShine {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* ===== GESTURE SUPPORT ===== */

/* * Swipe animations */
.swipeable {
  transition: transform var(--transition-normal);
}

.swipeable--swiping {
  transition: none;
}

.swipeable--swiped-left {
  transform: translateX(-100%);
}

.swipeable--swiped-right {
  transform: translateX(100%);
}

/* * Drag and drop */
.draggable {
  transition: transform var(--transition-fast);
}

.draggable--dragging {
  transform: scale(1.05) rotate(2deg);
  box-shadow: var(--shadow-lg);
  z-index: var(--z-modal);
}

/* ===== RESPONSIVE ANIMATIONS ===== */

/* * Mobile-specific animations */
@media (max-width: 768px) {
  .page-transition {
    animation-duration: calc(var(--page-transition-duration) * 0.8);
  }
  
  .interactive:hover {
    transform: none; /* Disable hover effects on mobile */
  }
}

/* * Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .interactive,
  .card--interactive,
  .link--animated,
  .btn,
  .input--animated,
  .modal-content,
  .toast,
  .progress-fill,
  .draggable {
    transition: none;
    animation: none;
  }
  
  .skeleton {
    background: var(--skeleton-bg);
    background-image: none;
  }
}

/* ===== PERFORMANCE OPTIMIZATIONS ===== */

/* * Hardware acceleration for smooth animations */
.animate-gpu {
  transform: translateZ(0);
  will-change: transform, opacity;
}

/* * Optimized transitions */
.transition-optimized {
  transition: transform var(--transition-normal),
              opacity var(--transition-normal),
              box-shadow var(--transition-normal);
  will-change: transform, opacity, box-shadow;
}

/* * Lazy loading placeholder */
.lazy-placeholder {
  background: var(--skeleton-bg);
  animation: pulse var(--pulse-duration) ease-in-out infinite;
}

/* ===== ACCESSIBILITY ENHANCEMENTS ===== */

/* * Screen reader only content */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* * High contrast mode adjustments */
@media (prefers-contrast: high) {
  .focus-ring:focus-visible {
    outline: 2px solid var(--text-strong);
    outline-offset: 2px;
  }
  
  .skeleton {
    background: var(--text-strong);
  }
}
